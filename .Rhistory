knitr::opts_chunk$set(echo = TRUE)
# install.packages("EnvStats")
library(EnvStats)
library(car)
library(foreign)
getwd()
datos_enteros<-read.spss("DB_3.sav", to.data.frame = TRUE)
#Cogemos las variables de interes
#datos<-datos_enteros[,32:46]
datos_enteros
datos_enteros.colnames
datos_enteros.colnames()
names(datos_enteros)
getwd()
datos<-read.spss("DB_3.sav", to.data.frame = TRUE)
head(datos)
# install.packages("EnvStats")
library(EnvStats)
library(car)
library(foreign)
getwd()
datos<-read.spss("DB_3.sav", to.data.frame = TRUE)
head(datos)
datos<-read.spss("DB_3.sav", to.data.frame = TRUE)
cbind(apply(is.na(datos),2,sum),apply(is.na(datos),2,sum)/dim(datos)[1])
View(datos)
View(datos)
datos['marrueco']
datos['zlibrop']
datos['ZTLIBROP']
datos['ZTLIBROP'$22]
datos['ZTLIBROP']
datos$ZTLIBROP
datos['ZTLIBROP']
datos[34,'ZTLIBROP']
datos[2,'ZTLIBROP']
datos[22,'ZTLIBROP']
datos['marrueco','ZTLIBROP']
datos['marrueco','ZTLIBROP']
datos['Marrueco','ZTLIBROP']
datos['Marrueco','ztlibrop']
datos['Marrueco','ZTLIBROP']
datos['marrueco','ZTLIBROP']
faltantes<-which(is.na(datos$zcaloría))
cor(datos[-faltantes,],use="complete.obs")[,"zcaloría"]
# install.packages("EnvStats")
library(EnvStats)
library(car)
library(foreign)
getwd()
datos_enteros<-read.spss("DB_1.sav", to.data.frame = TRUE)
faltantes<-which(is.na(datos$ZTLIBROP))
cor(datos[-faltantes,],use="complete.obs")[,"ztlibrop"]
# install.packages("EnvStats")
library(EnvStats)
library(car)
library(foreign)
getwd()
datos_enteros<-read.spss("DB_1.sav", to.data.frame = TRUE)
#Cogemos las variables de interes
datos<-datos_enteros[,32:46]
# install.packages("EnvStats")
library(EnvStats)
library(car)
library(foreign)
getwd()
datos_enteros<-read.spss("DB_1.sav", to.data.frame = TRUE)
#Cogemos las variables de interes
datos<-datos_enteros[,32:46]
getwd()
datos_enteros<-read.spss("DB_1.sav", to.data.frame = TRUE)
#Cogemos las variables de interes
datos<-datos_enteros[,32:46]
faltantes<-which(is.na(datos$ZTLIBROP))
cor(datos[-faltantes,],use="complete.obs")#[,"ztlibrop"]
faltantes<-which(is.na(datos$ZTLIBROP))
cor(datos[-faltantes,])#[,"ztlibrop"]
faltantes<-which(is.na(datos$ZTLIBROP))
#cor(datos[-faltantes,])#[,"ztlibrop"]
faltantes
faltantes<-which(is.na(datos$ZTLIBROP))
#cor(datos[-faltantes,])#[,"ztlibrop"]
datos[-faltantes,]
faltantes<-which(is.na(datos$ZTLIBROP))
#cor(datos[-faltantes,])#[,"ztlibrop"]
cor(datos[-faltantes,])
str(datos)
faltantes<-which(is.na(datos$ZTLIBROP))
#cor(datos[-faltantes,])#[,"ztlibrop"]
cor(datos[-c(faltantes, PAIS),])
#datos_aux = datos[-'PAIS']
faltantes<-which(is.na(datos$ZTLIBROP))
#cor(datos[-faltantes,])#[,"ztlibrop"]
cor(datos[-c(faltantes, 'PAIS'),])
datos_aux = datos[-'PAIS']
datos_aux = datos[-1]
faltantes<-which(is.na(datos_aux$ZTLIBROP))
#cor(datos[-faltantes,])#[,"ztlibrop"]
cor(datos_aux[-faltantes,])
datos_aux = datos[-1]
faltantes<-which(is.na(datos_aux$ZTLIBROP))
#cor(datos[-faltantes,])#[,"ztlibrop"]
cor(datos_aux[-faltantes,])[,'ztlibrop']
datos_aux = datos[-1,]
faltantes<-which(is.na(datos_aux$ZTLIBROP))
#cor(datos[-faltantes,])#[,"ztlibrop"]
cor(datos_aux[-faltantes,])[,'ztlibrop']
datos_aux = datos[-1,]
faltantes<-which(is.na(datos_aux$ZTLIBROP))
#cor(datos[-faltantes,])#[,"ztlibrop"]
cor(datos_aux[-faltantes,])[,'ztlibrop']
datos_aux = datos[-1,]
faltantes<-which(is.na(datos_aux$ZTLIBROP))
#cor(datos[-faltantes,])#[,"ztlibrop"]
cor(datos_aux[-faltantes,])[,'ztlibrop']
datos_aux = datos[-1,]
faltantes<-which(is.na(datos_aux$ZTLIBROP))
#cor(datos[-faltantes,])#[,"ztlibrop"]
cor(datos_aux[-faltantes,])[,'ztlibrop']
# install.packages("EnvStats")
library(EnvStats)
library(car)
library(foreign)
datos<-read.spss("DB_3.sav", to.data.frame = TRUE)
head(datos)
cbind(apply(is.na(datos),2,sum),apply(is.na(datos),2,sum)/dim(datos)[1])
datos['marrueco','ZTLIBROP']
datos_aux = datos[-1,]
faltantes<-which(is.na(datos_aux$ZTLIBROP))
#cor(datos[-faltantes,])#[,"ztlibrop"]
cor(datos_aux[-faltantes,])[,'ztlibrop']
datos_aux = datos[-1,]
faltantes<-which(is.na(datos_aux$ZTLIBROP))
#cor(datos[-faltantes,])#[,"ztlibrop"]
cor(datos_aux[-faltantes,])#[,'ztlibrop']
datos<-read.spss("DB_3.sav", to.data.frame = TRUE)
datos_aux <- datos[-1,]
faltantes<-which(is.na(datos_aux$ZTLIBROP))
#cor(datos[-faltantes,])#[,"ztlibrop"]
cor_matrix <- cor(datos_aux[-faltantes,])#[,'ztlibrop']
datos_aux
str(datos_aux)
datos_aux <- datos[,-1]
faltantes<-which(is.na(datos_aux$ZTLIBROP))
#cor(datos[-faltantes,])#[,"ztlibrop"]
cor_matrix <- cor(datos_aux[-faltantes,])#[,'ztlibrop']
cor_matrix[,'ZTLIBROP']
datos_aux <- datos[,-1]
faltantes<-which(is.na(datos_aux$ZTLIBROP))
cor_matrix <- cor(datos_aux[-faltantes,])#[,'ztlibrop']
cor_matrix[,'ZTLIBROP']
datos_aux <- datos[,-1]
faltantes<-which(is.na(datos_aux$ZTLIBROP))
cor_matrix <- cor(datos_aux[-faltantes,], use = "complete.obs")
cor_matrix[,'ZTLIBROP']
t.test(datos$zlog_pib[faltantes], datos$zlog_pib[-faltantes])
t.test(datos$ZESPVIDA[faltantes], datos$ZESPVIDA[-faltantes])
not_available<-function(data,na.rm=F){
data[is.na(data)]<-mean(data,na.rm=T)
data
}
datos_pca<-as.data.frame(apply(datos, 2, not_available))
not_available<-function(data,na.rm=F){
data[is.na(data)]<-mean(data,na.rm=T)
data
}
datos_pca$ZLIBROP<-not_available(datos$ZLIBROP)
datos$ZTLIBROP
mean(datos$ZTLIBROP, na.rm=T)
#mean(datos$ZTLIBROP, na.rm=T)
datos$ZTLIBROP[is.na(datos$ZTLIBROP)]
not_available<-function(data,na.rm=F){
data[is.na(data)]<-mean(data,na.rm=T)
data
}
datos$ZLIBROP<-not_available(datos$ZLIBROP)
not_available<-function(data,na.rm=F){
data[is.na(data)]<-mean(data,na.rm=T)
data
}
datos$ZTLIBROP<-not_available(datos$ZTLIBROP)
#mean(datos$ZTLIBROP, na.rm=T)
datos$ZTLIBROP[is.na(datos$ZTLIBROP)]
not_available<-function(data,na.rm=F){
data[is.na(data)]<-mean(data,na.rm=T)
data
}
datos$ZTLIBROP<-not_available(datos$ZTLIBROP)
#Definimos las medidas resistentes
PMC<-function(x){ return((as.double(quantile(x,0.25))+as.double(quantile(x,0.75)))/2)}
trimedia<-function(x){return((median(x)+PMC(x))/2)}
centrimedia<-function(x){
indices<-(x>quantile(x,0.25)&x<quantile(x,0.75))
valores<-x[indices]
return(sum(valores)/length(valores))
}
RIQ<-function(x){return(quantile(x,0.75)-quantile(x,0.25))}
MEDA<-function(x){return(median(abs(x-median(x))))}
CVc<-function(x){return((quantile(x,0.75)-quantile(x,0.25))/(quantile(x,0.75)+quantile(x,0.25)))}
H1<-function(x){return((quantile(x,0.25)+quantile(x,0.75)-2*median(x))/(2*median(x)))}
H2<-function(x){return(median(x)-(quantile(x,0.1)+quantile(x,0.9))/(2))}
H3<-function(x){return(H2(x)/median(x))}
#Creamos una función que aplique todas estas medidas
descriptivo<-function(x){
temp<-rbind(PMC(x),trimedia(x),centrimedia(x))
rownames(temp)<-c("PMC","Trimedia","Centrimedia")
centralidad<-list(clasica=list(media=mean(x)),resistente=temp)
temp<-rbind(RIQ(x),MEDA(x),CVc(x))
rownames(temp)<-c("Rango Inter-Cuartílico","MEDA","CVc")
dispersion<-list(clasica=list(desviación_típica=sd(x),Coef_varización=sd(x)/mean(x),rango=range(x)),resistente=temp)
temp<-rbind(H1(x),H2(x),H3(x))
rownames(temp)<-c("Asimetría de Yule","Asimetría de Kelly","Asimetría de Kelly adimensional")
forma<-list(clasica=list(skewness=skewness(x),kurtosis=kurtosis(x)),resistente=temp)
cat(names(x))
return(list(centralidad=centralidad,dispersion=dispersion,forma=forma))
}
View(datos_aux)
descriptivo(datos_pca[,1])
descriptivo(datos[,1])
descriptivo(datos[,2])
hist(col="darkblue",datos[,2],main="Densidad de población")
#Definimos las medidas resistentes
PMC<-function(x){ return((as.double(quantile(x,0.25))+as.double(quantile(x,0.75)))/2)}
trimedia<-function(x){return((median(x)+PMC(x))/2)}
centrimedia<-function(x){
indices<-(x>quantile(x,0.25)&x<quantile(x,0.75))
valores<-x[indices]
return(sum(valores)/length(valores))
}
RIQ<-function(x){return(quantile(x,0.75)-quantile(x,0.25))}
MEDA<-function(x){return(median(abs(x-median(x))))}
CVc<-function(x){return((quantile(x,0.75)-quantile(x,0.25))/(quantile(x,0.75)+quantile(x,0.25)))}
H1<-function(x){return((quantile(x,0.25)+quantile(x,0.75)-2*median(x))/(2*median(x)))}
H2<-function(x){return(median(x)-(quantile(x,0.1)+quantile(x,0.9))/(2))}
H3<-function(x){return(H2(x)/median(x))}
#Creamos una función que aplique todas estas medidas
descriptivo<-function(x){
temp<-rbind(PMC(x),trimedia(x),centrimedia(x))
rownames(temp)<-c("PMC","Trimedia","Centrimedia")
centralidad<-list(clasica=list(media=mean(x)),resistente=temp)
temp<-rbind(RIQ(x),MEDA(x),CVc(x))
rownames(temp)<-c("Rango Inter-Cuartílico","MEDA","CVc")
dispersion<-list(clasica=list(desviación_típica=sd(x),Coef_varización=sd(x)/mean(x),rango=range(x)),resistente=temp)
temp<-rbind(H1(x),H2(x),H3(x))
rownames(temp)<-c("Asimetría de Yule","Asimetría de Kelly","Asimetría de Kelly adimensional")
forma<-list(clasica=list(skewness=skewness(x),kurtosis=kurtosis(x)),resistente=temp)
cat(names(x))
return(list(centralidad=centralidad,dispersion=dispersion,forma=forma))
}
descriptivo(datos[,2])
# install.packages("EnvStats")
library(EnvStats)
library(car)
library(foreign)
datos<-read.spss("DB_3.sav", to.data.frame = TRUE)
head(datos)
cbind(apply(is.na(datos),2,sum),apply(is.na(datos),2,sum)/dim(datos)[1])
datos['marrueco','ZTLIBROP']
not_available<-function(data,na.rm=F){
data[is.na(data)]<-mean(data,na.rm=T)
data
}
datos$ZTLIBROP<-not_available(datos$ZTLIBROP)
#Definimos las medidas resistentes
PMC<-function(x){ return((as.double(quantile(x,0.25))+as.double(quantile(x,0.75)))/2)}
trimedia<-function(x){return((median(x)+PMC(x))/2)}
centrimedia<-function(x){
indices<-(x>quantile(x,0.25)&x<quantile(x,0.75))
valores<-x[indices]
return(sum(valores)/length(valores))
}
RIQ<-function(x){return(quantile(x,0.75)-quantile(x,0.25))}
MEDA<-function(x){return(median(abs(x-median(x))))}
CVc<-function(x){return((quantile(x,0.75)-quantile(x,0.25))/(quantile(x,0.75)+quantile(x,0.25)))}
H1<-function(x){return((quantile(x,0.25)+quantile(x,0.75)-2*median(x))/(2*median(x)))}
H2<-function(x){return(median(x)-(quantile(x,0.1)+quantile(x,0.9))/(2))}
H3<-function(x){return(H2(x)/median(x))}
#Creamos una función que aplique todas estas medidas
descriptivo<-function(x){
temp<-rbind(PMC(x),trimedia(x),centrimedia(x))
rownames(temp)<-c("PMC","Trimedia","Centrimedia")
centralidad<-list(clasica=list(media=mean(x)),resistente=temp)
temp<-rbind(RIQ(x),MEDA(x),CVc(x))
rownames(temp)<-c("Rango Inter-Cuartílico","MEDA","CVc")
dispersion<-list(clasica=list(desviación_típica=sd(x),Coef_varización=sd(x)/mean(x),rango=range(x)),resistente=temp)
temp<-rbind(H1(x),H2(x),H3(x))
rownames(temp)<-c("Asimetría de Yule","Asimetría de Kelly","Asimetría de Kelly adimensional")
forma<-list(clasica=list(skewness=skewness(x),kurtosis=kurtosis(x)),resistente=temp)
cat(names(x))
return(list(centralidad=centralidad,dispersion=dispersion,forma=forma))
}
descriptivo(datos[,2])
hist(col="darkblue",datos[,2],main="Densidad de población")
centralidad
analisis <- descriptivo(datos[,2])
hist(col="darkblue",datos[,2],main="Densidad de población")
analisis
descriptivo(datos[,2])
hist(col="darkblue",datos[,2],main="Densidad de población")
datos.colnames
colnames(datos)
datos[,2]
datos[,'ZTMINFAN']
datos[,3]
descriptivo(datos[,3])
hist(col="darkblue",datos[,3],main="Mortalidad infantil")
descriptivo(datos[,4])
hist(col="darkblue",datos[,4],main="Esperanza de vida")
descriptivo(datos[,5])
hist(col="darkblue",datos[,5],main="Porcentaje de población urbana")
descriptivo(datos[,6])
hist(col="darkblue",datos[,6],main="Tasa de médicos por habitante")
descriptivo(datos[,7])
hist(col="darkblue",datos[,7],main="Población del sector agrícola")
descriptivo(datos[,8])
hist(col="darkblue",datos[,8],main="Población del sector servicios")
descriptivo(datos[,9])
hist(col="darkblue",datos[,9],main="Número de libros publicados")
descriptivo(datos[,10])
hist(col="darkblue",datos[,10],main="Cociente entre el número de individuos en ejército de tierra y población total del estado")
datos[,c('PAIS','ZTEJERCI')]
descriptivo(datos[,11])
hist(col="darkblue",datos[,11],main="Cociente entre población activa y total")
descriptivo(datos[,12])
hist(col="darkblue",datos[,12],main="Tasa de consumo energético")
summary(datos)
summary(datos[,-1])
colfunc<-colorRampPalette(c("darkblue","lightblue"))
boxplot(datos,
xlab=NULL,
ylab="Nombre-y",
col=colfunc(15),
las=2)
colfunc<-colorRampPalette(c("darkblue","lightblue"))
boxplot(datos[,-1],
xlab=NULL,
ylab="Nombre-y",
col=colfunc(15),
las=2)
colfunc<-colorRampPalette(c("darkblue","lightblue"))
boxplot(datos[,-1],
xlab="Variables",
ylab=NULL,
col=colfunc(15),
las=2)
colfunc<-colorRampPalette(c("darkblue","yellow"))
boxplot(datos[,-1],
xlab="Variables",
ylab=NULL,
col=colfunc(15),
las=2)
colfunc<-colorRampPalette(c("darkblue","yellow"))
boxplot(datos[,-1],
xlab="Variables",
ylab=NULL,
col=colfunc(11),
las=2)
colfunc<-colorRampPalette(c("darkblue","yellow"))
boxplot(datos[,-1],
xlab=NULL,
ylab=NULL,
col=colfunc(11),
las=2)
par(mar=c(1,1,1,1))
par(mfrow=c(3,4))
invisible(apply(datos[,-1], 2,function(x){hist(x,main=NULL,col="darkblue",xlab=NULL,ylab=NULL)}))
par(mar=c(1,1,1,1))
par(mfrow=c(3,4))
invisible(apply(datos[,-1], 2,function(x){hist(x,main=NULL,col="darkblue",xlab=NULL,ylab=NULL)}))
outlier<-function(data,na.rm=T){
H<-1.5*IQR(data)
if(any(data<=(quantile(data,0.25,na.rm = T)-H))){
data[data<=quantile(data,0.25,na.rm = T)-H]<-NA
data[is.na(data)]<-mean(data,na.rm=T)
data<-outlier(data)}
if(any(data>=(quantile(data,0.75, na.rm = T)+H))){
data[data>=quantile(data,0.75, na.rm = T)+H]<-NA
data[is.na(data)]<-mean(data,na.rm=T)
data<-outlier(data)
}
return(data)
}
datos[,-1:-2]<-apply(datos_pca[,-1:-2], 2, outlier)
outlier<-function(data,na.rm=T){
H<-1.5*IQR(data)
if(any(data<=(quantile(data,0.25,na.rm = T)-H))){
data[data<=quantile(data,0.25,na.rm = T)-H]<-NA
data[is.na(data)]<-mean(data,na.rm=T)
data<-outlier(data)}
if(any(data>=(quantile(data,0.75, na.rm = T)+H))){
data[data>=quantile(data,0.75, na.rm = T)+H]<-NA
data[is.na(data)]<-mean(data,na.rm=T)
data<-outlier(data)
}
return(data)
}
datos[,-1:-2]<-apply(datos[,-1:-2], 2, outlier)
boxplot(datos_pca,
xlab=NULL,
ylab="Nombre-y",
col=colfunc(15),
las=2)
boxplot(datos[,-1],
xlab=NULL,
ylab=NULL,
col=colfunc(11),
las=2)
par(mar=c(1,1,1,1))
par(mfrow=c(3,4))
invisible(apply(datos[,-1], 2, function(x){
qqnorm(x,main=NULL)
abline(a=0,b=1,col="red")
}))
